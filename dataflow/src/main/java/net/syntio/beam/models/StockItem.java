/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.syntio.beam.models;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StockItem extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5797129641840764592L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StockItem\",\"namespace\":\"net.syntio.beam.models\",\"fields\":[{\"name\":\"Barcode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Brand\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"IsChillerStock\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"LeadTimeDays\",\"type\":\"int\"},{\"name\":\"MarketingComments\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"QuantityPerOuter\",\"type\":\"int\"},{\"name\":\"RecommendedRetailPrice\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"SearchDetails\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Size\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"StockItemID\",\"type\":\"int\"},{\"name\":\"StockItemName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"StockItemsCustomFields\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"StockItemsInternalComments\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"StockItemsValidFrom\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"StockItemsValidTo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Tags\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"TypicalWeightPerUnit\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<StockItem> ENCODER =
      new BinaryMessageEncoder<StockItem>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<StockItem> DECODER =
      new BinaryMessageDecoder<StockItem>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<StockItem> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<StockItem> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<StockItem>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this StockItem to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a StockItem from a ByteBuffer. */
  public static StockItem fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String Barcode;
  @Deprecated public java.lang.String Brand;
  @Deprecated public java.lang.String IsChillerStock;
  @Deprecated public int LeadTimeDays;
  @Deprecated public java.lang.String MarketingComments;
  @Deprecated public int QuantityPerOuter;
  @Deprecated public java.lang.String RecommendedRetailPrice;
  @Deprecated public java.lang.String SearchDetails;
  @Deprecated public java.lang.String Size;
  @Deprecated public int StockItemID;
  @Deprecated public java.lang.String StockItemName;
  @Deprecated public java.lang.String StockItemsCustomFields;
  @Deprecated public java.lang.String StockItemsInternalComments;
  @Deprecated public java.lang.String StockItemsValidFrom;
  @Deprecated public java.lang.String StockItemsValidTo;
  @Deprecated public java.lang.String Tags;
  @Deprecated public java.lang.String TypicalWeightPerUnit;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public StockItem() {}

  /**
   * All-args constructor.
   * @param Barcode The new value for Barcode
   * @param Brand The new value for Brand
   * @param IsChillerStock The new value for IsChillerStock
   * @param LeadTimeDays The new value for LeadTimeDays
   * @param MarketingComments The new value for MarketingComments
   * @param QuantityPerOuter The new value for QuantityPerOuter
   * @param RecommendedRetailPrice The new value for RecommendedRetailPrice
   * @param SearchDetails The new value for SearchDetails
   * @param Size The new value for Size
   * @param StockItemID The new value for StockItemID
   * @param StockItemName The new value for StockItemName
   * @param StockItemsCustomFields The new value for StockItemsCustomFields
   * @param StockItemsInternalComments The new value for StockItemsInternalComments
   * @param StockItemsValidFrom The new value for StockItemsValidFrom
   * @param StockItemsValidTo The new value for StockItemsValidTo
   * @param Tags The new value for Tags
   * @param TypicalWeightPerUnit The new value for TypicalWeightPerUnit
   */
  public StockItem(java.lang.String Barcode, java.lang.String Brand, java.lang.String IsChillerStock, java.lang.Integer LeadTimeDays, java.lang.String MarketingComments, java.lang.Integer QuantityPerOuter, java.lang.String RecommendedRetailPrice, java.lang.String SearchDetails, java.lang.String Size, java.lang.Integer StockItemID, java.lang.String StockItemName, java.lang.String StockItemsCustomFields, java.lang.String StockItemsInternalComments, java.lang.String StockItemsValidFrom, java.lang.String StockItemsValidTo, java.lang.String Tags, java.lang.String TypicalWeightPerUnit) {
    this.Barcode = Barcode;
    this.Brand = Brand;
    this.IsChillerStock = IsChillerStock;
    this.LeadTimeDays = LeadTimeDays;
    this.MarketingComments = MarketingComments;
    this.QuantityPerOuter = QuantityPerOuter;
    this.RecommendedRetailPrice = RecommendedRetailPrice;
    this.SearchDetails = SearchDetails;
    this.Size = Size;
    this.StockItemID = StockItemID;
    this.StockItemName = StockItemName;
    this.StockItemsCustomFields = StockItemsCustomFields;
    this.StockItemsInternalComments = StockItemsInternalComments;
    this.StockItemsValidFrom = StockItemsValidFrom;
    this.StockItemsValidTo = StockItemsValidTo;
    this.Tags = Tags;
    this.TypicalWeightPerUnit = TypicalWeightPerUnit;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Barcode;
    case 1: return Brand;
    case 2: return IsChillerStock;
    case 3: return LeadTimeDays;
    case 4: return MarketingComments;
    case 5: return QuantityPerOuter;
    case 6: return RecommendedRetailPrice;
    case 7: return SearchDetails;
    case 8: return Size;
    case 9: return StockItemID;
    case 10: return StockItemName;
    case 11: return StockItemsCustomFields;
    case 12: return StockItemsInternalComments;
    case 13: return StockItemsValidFrom;
    case 14: return StockItemsValidTo;
    case 15: return Tags;
    case 16: return TypicalWeightPerUnit;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Barcode = (java.lang.String)value$; break;
    case 1: Brand = (java.lang.String)value$; break;
    case 2: IsChillerStock = (java.lang.String)value$; break;
    case 3: LeadTimeDays = (java.lang.Integer)value$; break;
    case 4: MarketingComments = (java.lang.String)value$; break;
    case 5: QuantityPerOuter = (java.lang.Integer)value$; break;
    case 6: RecommendedRetailPrice = (java.lang.String)value$; break;
    case 7: SearchDetails = (java.lang.String)value$; break;
    case 8: Size = (java.lang.String)value$; break;
    case 9: StockItemID = (java.lang.Integer)value$; break;
    case 10: StockItemName = (java.lang.String)value$; break;
    case 11: StockItemsCustomFields = (java.lang.String)value$; break;
    case 12: StockItemsInternalComments = (java.lang.String)value$; break;
    case 13: StockItemsValidFrom = (java.lang.String)value$; break;
    case 14: StockItemsValidTo = (java.lang.String)value$; break;
    case 15: Tags = (java.lang.String)value$; break;
    case 16: TypicalWeightPerUnit = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'Barcode' field.
   * @return The value of the 'Barcode' field.
   */
  public java.lang.String getBarcode() {
    return Barcode;
  }

  /**
   * Sets the value of the 'Barcode' field.
   * @param value the value to set.
   */
  public void setBarcode(java.lang.String value) {
    this.Barcode = value;
  }

  /**
   * Gets the value of the 'Brand' field.
   * @return The value of the 'Brand' field.
   */
  public java.lang.String getBrand() {
    return Brand;
  }

  /**
   * Sets the value of the 'Brand' field.
   * @param value the value to set.
   */
  public void setBrand(java.lang.String value) {
    this.Brand = value;
  }

  /**
   * Gets the value of the 'IsChillerStock' field.
   * @return The value of the 'IsChillerStock' field.
   */
  public java.lang.String getIsChillerStock() {
    return IsChillerStock;
  }

  /**
   * Sets the value of the 'IsChillerStock' field.
   * @param value the value to set.
   */
  public void setIsChillerStock(java.lang.String value) {
    this.IsChillerStock = value;
  }

  /**
   * Gets the value of the 'LeadTimeDays' field.
   * @return The value of the 'LeadTimeDays' field.
   */
  public java.lang.Integer getLeadTimeDays() {
    return LeadTimeDays;
  }

  /**
   * Sets the value of the 'LeadTimeDays' field.
   * @param value the value to set.
   */
  public void setLeadTimeDays(java.lang.Integer value) {
    this.LeadTimeDays = value;
  }

  /**
   * Gets the value of the 'MarketingComments' field.
   * @return The value of the 'MarketingComments' field.
   */
  public java.lang.String getMarketingComments() {
    return MarketingComments;
  }

  /**
   * Sets the value of the 'MarketingComments' field.
   * @param value the value to set.
   */
  public void setMarketingComments(java.lang.String value) {
    this.MarketingComments = value;
  }

  /**
   * Gets the value of the 'QuantityPerOuter' field.
   * @return The value of the 'QuantityPerOuter' field.
   */
  public java.lang.Integer getQuantityPerOuter() {
    return QuantityPerOuter;
  }

  /**
   * Sets the value of the 'QuantityPerOuter' field.
   * @param value the value to set.
   */
  public void setQuantityPerOuter(java.lang.Integer value) {
    this.QuantityPerOuter = value;
  }

  /**
   * Gets the value of the 'RecommendedRetailPrice' field.
   * @return The value of the 'RecommendedRetailPrice' field.
   */
  public java.lang.String getRecommendedRetailPrice() {
    return RecommendedRetailPrice;
  }

  /**
   * Sets the value of the 'RecommendedRetailPrice' field.
   * @param value the value to set.
   */
  public void setRecommendedRetailPrice(java.lang.String value) {
    this.RecommendedRetailPrice = value;
  }

  /**
   * Gets the value of the 'SearchDetails' field.
   * @return The value of the 'SearchDetails' field.
   */
  public java.lang.String getSearchDetails() {
    return SearchDetails;
  }

  /**
   * Sets the value of the 'SearchDetails' field.
   * @param value the value to set.
   */
  public void setSearchDetails(java.lang.String value) {
    this.SearchDetails = value;
  }

  /**
   * Gets the value of the 'Size' field.
   * @return The value of the 'Size' field.
   */
  public java.lang.String getSize() {
    return Size;
  }

  /**
   * Sets the value of the 'Size' field.
   * @param value the value to set.
   */
  public void setSize(java.lang.String value) {
    this.Size = value;
  }

  /**
   * Gets the value of the 'StockItemID' field.
   * @return The value of the 'StockItemID' field.
   */
  public java.lang.Integer getStockItemID() {
    return StockItemID;
  }

  /**
   * Sets the value of the 'StockItemID' field.
   * @param value the value to set.
   */
  public void setStockItemID(java.lang.Integer value) {
    this.StockItemID = value;
  }

  /**
   * Gets the value of the 'StockItemName' field.
   * @return The value of the 'StockItemName' field.
   */
  public java.lang.String getStockItemName() {
    return StockItemName;
  }

  /**
   * Sets the value of the 'StockItemName' field.
   * @param value the value to set.
   */
  public void setStockItemName(java.lang.String value) {
    this.StockItemName = value;
  }

  /**
   * Gets the value of the 'StockItemsCustomFields' field.
   * @return The value of the 'StockItemsCustomFields' field.
   */
  public java.lang.String getStockItemsCustomFields() {
    return StockItemsCustomFields;
  }

  /**
   * Sets the value of the 'StockItemsCustomFields' field.
   * @param value the value to set.
   */
  public void setStockItemsCustomFields(java.lang.String value) {
    this.StockItemsCustomFields = value;
  }

  /**
   * Gets the value of the 'StockItemsInternalComments' field.
   * @return The value of the 'StockItemsInternalComments' field.
   */
  public java.lang.String getStockItemsInternalComments() {
    return StockItemsInternalComments;
  }

  /**
   * Sets the value of the 'StockItemsInternalComments' field.
   * @param value the value to set.
   */
  public void setStockItemsInternalComments(java.lang.String value) {
    this.StockItemsInternalComments = value;
  }

  /**
   * Gets the value of the 'StockItemsValidFrom' field.
   * @return The value of the 'StockItemsValidFrom' field.
   */
  public java.lang.String getStockItemsValidFrom() {
    return StockItemsValidFrom;
  }

  /**
   * Sets the value of the 'StockItemsValidFrom' field.
   * @param value the value to set.
   */
  public void setStockItemsValidFrom(java.lang.String value) {
    this.StockItemsValidFrom = value;
  }

  /**
   * Gets the value of the 'StockItemsValidTo' field.
   * @return The value of the 'StockItemsValidTo' field.
   */
  public java.lang.String getStockItemsValidTo() {
    return StockItemsValidTo;
  }

  /**
   * Sets the value of the 'StockItemsValidTo' field.
   * @param value the value to set.
   */
  public void setStockItemsValidTo(java.lang.String value) {
    this.StockItemsValidTo = value;
  }

  /**
   * Gets the value of the 'Tags' field.
   * @return The value of the 'Tags' field.
   */
  public java.lang.String getTags() {
    return Tags;
  }

  /**
   * Sets the value of the 'Tags' field.
   * @param value the value to set.
   */
  public void setTags(java.lang.String value) {
    this.Tags = value;
  }

  /**
   * Gets the value of the 'TypicalWeightPerUnit' field.
   * @return The value of the 'TypicalWeightPerUnit' field.
   */
  public java.lang.String getTypicalWeightPerUnit() {
    return TypicalWeightPerUnit;
  }

  /**
   * Sets the value of the 'TypicalWeightPerUnit' field.
   * @param value the value to set.
   */
  public void setTypicalWeightPerUnit(java.lang.String value) {
    this.TypicalWeightPerUnit = value;
  }

  /**
   * Creates a new StockItem RecordBuilder.
   * @return A new StockItem RecordBuilder
   */
  public static net.syntio.beam.models.StockItem.Builder newBuilder() {
    return new net.syntio.beam.models.StockItem.Builder();
  }

  /**
   * Creates a new StockItem RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new StockItem RecordBuilder
   */
  public static net.syntio.beam.models.StockItem.Builder newBuilder(net.syntio.beam.models.StockItem.Builder other) {
    return new net.syntio.beam.models.StockItem.Builder(other);
  }

  /**
   * Creates a new StockItem RecordBuilder by copying an existing StockItem instance.
   * @param other The existing instance to copy.
   * @return A new StockItem RecordBuilder
   */
  public static net.syntio.beam.models.StockItem.Builder newBuilder(net.syntio.beam.models.StockItem other) {
    return new net.syntio.beam.models.StockItem.Builder(other);
  }

  /**
   * RecordBuilder for StockItem instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StockItem>
    implements org.apache.avro.data.RecordBuilder<StockItem> {

    private java.lang.String Barcode;
    private java.lang.String Brand;
    private java.lang.String IsChillerStock;
    private int LeadTimeDays;
    private java.lang.String MarketingComments;
    private int QuantityPerOuter;
    private java.lang.String RecommendedRetailPrice;
    private java.lang.String SearchDetails;
    private java.lang.String Size;
    private int StockItemID;
    private java.lang.String StockItemName;
    private java.lang.String StockItemsCustomFields;
    private java.lang.String StockItemsInternalComments;
    private java.lang.String StockItemsValidFrom;
    private java.lang.String StockItemsValidTo;
    private java.lang.String Tags;
    private java.lang.String TypicalWeightPerUnit;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.syntio.beam.models.StockItem.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Barcode)) {
        this.Barcode = data().deepCopy(fields()[0].schema(), other.Barcode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Brand)) {
        this.Brand = data().deepCopy(fields()[1].schema(), other.Brand);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.IsChillerStock)) {
        this.IsChillerStock = data().deepCopy(fields()[2].schema(), other.IsChillerStock);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.LeadTimeDays)) {
        this.LeadTimeDays = data().deepCopy(fields()[3].schema(), other.LeadTimeDays);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.MarketingComments)) {
        this.MarketingComments = data().deepCopy(fields()[4].schema(), other.MarketingComments);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.QuantityPerOuter)) {
        this.QuantityPerOuter = data().deepCopy(fields()[5].schema(), other.QuantityPerOuter);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.RecommendedRetailPrice)) {
        this.RecommendedRetailPrice = data().deepCopy(fields()[6].schema(), other.RecommendedRetailPrice);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.SearchDetails)) {
        this.SearchDetails = data().deepCopy(fields()[7].schema(), other.SearchDetails);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.Size)) {
        this.Size = data().deepCopy(fields()[8].schema(), other.Size);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.StockItemID)) {
        this.StockItemID = data().deepCopy(fields()[9].schema(), other.StockItemID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.StockItemName)) {
        this.StockItemName = data().deepCopy(fields()[10].schema(), other.StockItemName);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.StockItemsCustomFields)) {
        this.StockItemsCustomFields = data().deepCopy(fields()[11].schema(), other.StockItemsCustomFields);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.StockItemsInternalComments)) {
        this.StockItemsInternalComments = data().deepCopy(fields()[12].schema(), other.StockItemsInternalComments);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.StockItemsValidFrom)) {
        this.StockItemsValidFrom = data().deepCopy(fields()[13].schema(), other.StockItemsValidFrom);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.StockItemsValidTo)) {
        this.StockItemsValidTo = data().deepCopy(fields()[14].schema(), other.StockItemsValidTo);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.Tags)) {
        this.Tags = data().deepCopy(fields()[15].schema(), other.Tags);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.TypicalWeightPerUnit)) {
        this.TypicalWeightPerUnit = data().deepCopy(fields()[16].schema(), other.TypicalWeightPerUnit);
        fieldSetFlags()[16] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing StockItem instance
     * @param other The existing instance to copy.
     */
    private Builder(net.syntio.beam.models.StockItem other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.Barcode)) {
        this.Barcode = data().deepCopy(fields()[0].schema(), other.Barcode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Brand)) {
        this.Brand = data().deepCopy(fields()[1].schema(), other.Brand);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.IsChillerStock)) {
        this.IsChillerStock = data().deepCopy(fields()[2].schema(), other.IsChillerStock);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.LeadTimeDays)) {
        this.LeadTimeDays = data().deepCopy(fields()[3].schema(), other.LeadTimeDays);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.MarketingComments)) {
        this.MarketingComments = data().deepCopy(fields()[4].schema(), other.MarketingComments);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.QuantityPerOuter)) {
        this.QuantityPerOuter = data().deepCopy(fields()[5].schema(), other.QuantityPerOuter);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.RecommendedRetailPrice)) {
        this.RecommendedRetailPrice = data().deepCopy(fields()[6].schema(), other.RecommendedRetailPrice);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.SearchDetails)) {
        this.SearchDetails = data().deepCopy(fields()[7].schema(), other.SearchDetails);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.Size)) {
        this.Size = data().deepCopy(fields()[8].schema(), other.Size);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.StockItemID)) {
        this.StockItemID = data().deepCopy(fields()[9].schema(), other.StockItemID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.StockItemName)) {
        this.StockItemName = data().deepCopy(fields()[10].schema(), other.StockItemName);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.StockItemsCustomFields)) {
        this.StockItemsCustomFields = data().deepCopy(fields()[11].schema(), other.StockItemsCustomFields);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.StockItemsInternalComments)) {
        this.StockItemsInternalComments = data().deepCopy(fields()[12].schema(), other.StockItemsInternalComments);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.StockItemsValidFrom)) {
        this.StockItemsValidFrom = data().deepCopy(fields()[13].schema(), other.StockItemsValidFrom);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.StockItemsValidTo)) {
        this.StockItemsValidTo = data().deepCopy(fields()[14].schema(), other.StockItemsValidTo);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.Tags)) {
        this.Tags = data().deepCopy(fields()[15].schema(), other.Tags);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.TypicalWeightPerUnit)) {
        this.TypicalWeightPerUnit = data().deepCopy(fields()[16].schema(), other.TypicalWeightPerUnit);
        fieldSetFlags()[16] = true;
      }
    }

    /**
      * Gets the value of the 'Barcode' field.
      * @return The value.
      */
    public java.lang.String getBarcode() {
      return Barcode;
    }

    /**
      * Sets the value of the 'Barcode' field.
      * @param value The value of 'Barcode'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setBarcode(java.lang.String value) {
      validate(fields()[0], value);
      this.Barcode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'Barcode' field has been set.
      * @return True if the 'Barcode' field has been set, false otherwise.
      */
    public boolean hasBarcode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'Barcode' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearBarcode() {
      Barcode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Brand' field.
      * @return The value.
      */
    public java.lang.String getBrand() {
      return Brand;
    }

    /**
      * Sets the value of the 'Brand' field.
      * @param value The value of 'Brand'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setBrand(java.lang.String value) {
      validate(fields()[1], value);
      this.Brand = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Brand' field has been set.
      * @return True if the 'Brand' field has been set, false otherwise.
      */
    public boolean hasBrand() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Brand' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearBrand() {
      Brand = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'IsChillerStock' field.
      * @return The value.
      */
    public java.lang.String getIsChillerStock() {
      return IsChillerStock;
    }

    /**
      * Sets the value of the 'IsChillerStock' field.
      * @param value The value of 'IsChillerStock'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setIsChillerStock(java.lang.String value) {
      validate(fields()[2], value);
      this.IsChillerStock = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'IsChillerStock' field has been set.
      * @return True if the 'IsChillerStock' field has been set, false otherwise.
      */
    public boolean hasIsChillerStock() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'IsChillerStock' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearIsChillerStock() {
      IsChillerStock = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'LeadTimeDays' field.
      * @return The value.
      */
    public java.lang.Integer getLeadTimeDays() {
      return LeadTimeDays;
    }

    /**
      * Sets the value of the 'LeadTimeDays' field.
      * @param value The value of 'LeadTimeDays'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setLeadTimeDays(int value) {
      validate(fields()[3], value);
      this.LeadTimeDays = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'LeadTimeDays' field has been set.
      * @return True if the 'LeadTimeDays' field has been set, false otherwise.
      */
    public boolean hasLeadTimeDays() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'LeadTimeDays' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearLeadTimeDays() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'MarketingComments' field.
      * @return The value.
      */
    public java.lang.String getMarketingComments() {
      return MarketingComments;
    }

    /**
      * Sets the value of the 'MarketingComments' field.
      * @param value The value of 'MarketingComments'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setMarketingComments(java.lang.String value) {
      validate(fields()[4], value);
      this.MarketingComments = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'MarketingComments' field has been set.
      * @return True if the 'MarketingComments' field has been set, false otherwise.
      */
    public boolean hasMarketingComments() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'MarketingComments' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearMarketingComments() {
      MarketingComments = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'QuantityPerOuter' field.
      * @return The value.
      */
    public java.lang.Integer getQuantityPerOuter() {
      return QuantityPerOuter;
    }

    /**
      * Sets the value of the 'QuantityPerOuter' field.
      * @param value The value of 'QuantityPerOuter'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setQuantityPerOuter(int value) {
      validate(fields()[5], value);
      this.QuantityPerOuter = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'QuantityPerOuter' field has been set.
      * @return True if the 'QuantityPerOuter' field has been set, false otherwise.
      */
    public boolean hasQuantityPerOuter() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'QuantityPerOuter' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearQuantityPerOuter() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'RecommendedRetailPrice' field.
      * @return The value.
      */
    public java.lang.String getRecommendedRetailPrice() {
      return RecommendedRetailPrice;
    }

    /**
      * Sets the value of the 'RecommendedRetailPrice' field.
      * @param value The value of 'RecommendedRetailPrice'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setRecommendedRetailPrice(java.lang.String value) {
      validate(fields()[6], value);
      this.RecommendedRetailPrice = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'RecommendedRetailPrice' field has been set.
      * @return True if the 'RecommendedRetailPrice' field has been set, false otherwise.
      */
    public boolean hasRecommendedRetailPrice() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'RecommendedRetailPrice' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearRecommendedRetailPrice() {
      RecommendedRetailPrice = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'SearchDetails' field.
      * @return The value.
      */
    public java.lang.String getSearchDetails() {
      return SearchDetails;
    }

    /**
      * Sets the value of the 'SearchDetails' field.
      * @param value The value of 'SearchDetails'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setSearchDetails(java.lang.String value) {
      validate(fields()[7], value);
      this.SearchDetails = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'SearchDetails' field has been set.
      * @return True if the 'SearchDetails' field has been set, false otherwise.
      */
    public boolean hasSearchDetails() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'SearchDetails' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearSearchDetails() {
      SearchDetails = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'Size' field.
      * @return The value.
      */
    public java.lang.String getSize() {
      return Size;
    }

    /**
      * Sets the value of the 'Size' field.
      * @param value The value of 'Size'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setSize(java.lang.String value) {
      validate(fields()[8], value);
      this.Size = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'Size' field has been set.
      * @return True if the 'Size' field has been set, false otherwise.
      */
    public boolean hasSize() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'Size' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearSize() {
      Size = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'StockItemID' field.
      * @return The value.
      */
    public java.lang.Integer getStockItemID() {
      return StockItemID;
    }

    /**
      * Sets the value of the 'StockItemID' field.
      * @param value The value of 'StockItemID'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setStockItemID(int value) {
      validate(fields()[9], value);
      this.StockItemID = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'StockItemID' field has been set.
      * @return True if the 'StockItemID' field has been set, false otherwise.
      */
    public boolean hasStockItemID() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'StockItemID' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearStockItemID() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'StockItemName' field.
      * @return The value.
      */
    public java.lang.String getStockItemName() {
      return StockItemName;
    }

    /**
      * Sets the value of the 'StockItemName' field.
      * @param value The value of 'StockItemName'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setStockItemName(java.lang.String value) {
      validate(fields()[10], value);
      this.StockItemName = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'StockItemName' field has been set.
      * @return True if the 'StockItemName' field has been set, false otherwise.
      */
    public boolean hasStockItemName() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'StockItemName' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearStockItemName() {
      StockItemName = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'StockItemsCustomFields' field.
      * @return The value.
      */
    public java.lang.String getStockItemsCustomFields() {
      return StockItemsCustomFields;
    }

    /**
      * Sets the value of the 'StockItemsCustomFields' field.
      * @param value The value of 'StockItemsCustomFields'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setStockItemsCustomFields(java.lang.String value) {
      validate(fields()[11], value);
      this.StockItemsCustomFields = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'StockItemsCustomFields' field has been set.
      * @return True if the 'StockItemsCustomFields' field has been set, false otherwise.
      */
    public boolean hasStockItemsCustomFields() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'StockItemsCustomFields' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearStockItemsCustomFields() {
      StockItemsCustomFields = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'StockItemsInternalComments' field.
      * @return The value.
      */
    public java.lang.String getStockItemsInternalComments() {
      return StockItemsInternalComments;
    }

    /**
      * Sets the value of the 'StockItemsInternalComments' field.
      * @param value The value of 'StockItemsInternalComments'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setStockItemsInternalComments(java.lang.String value) {
      validate(fields()[12], value);
      this.StockItemsInternalComments = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'StockItemsInternalComments' field has been set.
      * @return True if the 'StockItemsInternalComments' field has been set, false otherwise.
      */
    public boolean hasStockItemsInternalComments() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'StockItemsInternalComments' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearStockItemsInternalComments() {
      StockItemsInternalComments = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'StockItemsValidFrom' field.
      * @return The value.
      */
    public java.lang.String getStockItemsValidFrom() {
      return StockItemsValidFrom;
    }

    /**
      * Sets the value of the 'StockItemsValidFrom' field.
      * @param value The value of 'StockItemsValidFrom'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setStockItemsValidFrom(java.lang.String value) {
      validate(fields()[13], value);
      this.StockItemsValidFrom = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'StockItemsValidFrom' field has been set.
      * @return True if the 'StockItemsValidFrom' field has been set, false otherwise.
      */
    public boolean hasStockItemsValidFrom() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'StockItemsValidFrom' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearStockItemsValidFrom() {
      StockItemsValidFrom = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'StockItemsValidTo' field.
      * @return The value.
      */
    public java.lang.String getStockItemsValidTo() {
      return StockItemsValidTo;
    }

    /**
      * Sets the value of the 'StockItemsValidTo' field.
      * @param value The value of 'StockItemsValidTo'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setStockItemsValidTo(java.lang.String value) {
      validate(fields()[14], value);
      this.StockItemsValidTo = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'StockItemsValidTo' field has been set.
      * @return True if the 'StockItemsValidTo' field has been set, false otherwise.
      */
    public boolean hasStockItemsValidTo() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'StockItemsValidTo' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearStockItemsValidTo() {
      StockItemsValidTo = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'Tags' field.
      * @return The value.
      */
    public java.lang.String getTags() {
      return Tags;
    }

    /**
      * Sets the value of the 'Tags' field.
      * @param value The value of 'Tags'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setTags(java.lang.String value) {
      validate(fields()[15], value);
      this.Tags = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'Tags' field has been set.
      * @return True if the 'Tags' field has been set, false otherwise.
      */
    public boolean hasTags() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'Tags' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearTags() {
      Tags = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'TypicalWeightPerUnit' field.
      * @return The value.
      */
    public java.lang.String getTypicalWeightPerUnit() {
      return TypicalWeightPerUnit;
    }

    /**
      * Sets the value of the 'TypicalWeightPerUnit' field.
      * @param value The value of 'TypicalWeightPerUnit'.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder setTypicalWeightPerUnit(java.lang.String value) {
      validate(fields()[16], value);
      this.TypicalWeightPerUnit = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'TypicalWeightPerUnit' field has been set.
      * @return True if the 'TypicalWeightPerUnit' field has been set, false otherwise.
      */
    public boolean hasTypicalWeightPerUnit() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'TypicalWeightPerUnit' field.
      * @return This builder.
      */
    public net.syntio.beam.models.StockItem.Builder clearTypicalWeightPerUnit() {
      TypicalWeightPerUnit = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public StockItem build() {
      try {
        StockItem record = new StockItem();
        record.Barcode = fieldSetFlags()[0] ? this.Barcode : (java.lang.String) defaultValue(fields()[0]);
        record.Brand = fieldSetFlags()[1] ? this.Brand : (java.lang.String) defaultValue(fields()[1]);
        record.IsChillerStock = fieldSetFlags()[2] ? this.IsChillerStock : (java.lang.String) defaultValue(fields()[2]);
        record.LeadTimeDays = fieldSetFlags()[3] ? this.LeadTimeDays : (java.lang.Integer) defaultValue(fields()[3]);
        record.MarketingComments = fieldSetFlags()[4] ? this.MarketingComments : (java.lang.String) defaultValue(fields()[4]);
        record.QuantityPerOuter = fieldSetFlags()[5] ? this.QuantityPerOuter : (java.lang.Integer) defaultValue(fields()[5]);
        record.RecommendedRetailPrice = fieldSetFlags()[6] ? this.RecommendedRetailPrice : (java.lang.String) defaultValue(fields()[6]);
        record.SearchDetails = fieldSetFlags()[7] ? this.SearchDetails : (java.lang.String) defaultValue(fields()[7]);
        record.Size = fieldSetFlags()[8] ? this.Size : (java.lang.String) defaultValue(fields()[8]);
        record.StockItemID = fieldSetFlags()[9] ? this.StockItemID : (java.lang.Integer) defaultValue(fields()[9]);
        record.StockItemName = fieldSetFlags()[10] ? this.StockItemName : (java.lang.String) defaultValue(fields()[10]);
        record.StockItemsCustomFields = fieldSetFlags()[11] ? this.StockItemsCustomFields : (java.lang.String) defaultValue(fields()[11]);
        record.StockItemsInternalComments = fieldSetFlags()[12] ? this.StockItemsInternalComments : (java.lang.String) defaultValue(fields()[12]);
        record.StockItemsValidFrom = fieldSetFlags()[13] ? this.StockItemsValidFrom : (java.lang.String) defaultValue(fields()[13]);
        record.StockItemsValidTo = fieldSetFlags()[14] ? this.StockItemsValidTo : (java.lang.String) defaultValue(fields()[14]);
        record.Tags = fieldSetFlags()[15] ? this.Tags : (java.lang.String) defaultValue(fields()[15]);
        record.TypicalWeightPerUnit = fieldSetFlags()[16] ? this.TypicalWeightPerUnit : (java.lang.String) defaultValue(fields()[16]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<StockItem>
    WRITER$ = (org.apache.avro.io.DatumWriter<StockItem>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<StockItem>
    READER$ = (org.apache.avro.io.DatumReader<StockItem>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
