/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.syntio.beam.models;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OrderLines extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7449971666965409488L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderLines\",\"namespace\":\"net.syntio.beam.models\",\"fields\":[{\"name\":\"Description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"OrderLineID\",\"type\":\"int\"},{\"name\":\"OrderLineLastEditedWhen\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PackageType\",\"type\":{\"type\":\"record\",\"name\":\"PackageType\",\"fields\":[{\"name\":\"PackageTypeID\",\"type\":\"int\"},{\"name\":\"PackageTypeName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PackageTypeValidFrom\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PackageTypeValidTo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"PickedQuantity\",\"type\":\"int\"},{\"name\":\"PickingCompletedWhen\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Quantity\",\"type\":\"int\"},{\"name\":\"StockItem\",\"type\":{\"type\":\"record\",\"name\":\"StockItem\",\"fields\":[{\"name\":\"Barcode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Brand\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"IsChillerStock\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"LeadTimeDays\",\"type\":\"int\"},{\"name\":\"MarketingComments\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"QuantityPerOuter\",\"type\":\"int\"},{\"name\":\"RecommendedRetailPrice\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"SearchDetails\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Size\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"StockItemID\",\"type\":\"int\"},{\"name\":\"StockItemName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"StockItemsCustomFields\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"StockItemsInternalComments\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"StockItemsValidFrom\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"StockItemsValidTo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Tags\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"TypicalWeightPerUnit\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"TaxRate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"UnitPrice\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderLines> ENCODER =
      new BinaryMessageEncoder<OrderLines>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderLines> DECODER =
      new BinaryMessageDecoder<OrderLines>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<OrderLines> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<OrderLines> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OrderLines>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this OrderLines to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a OrderLines from a ByteBuffer. */
  public static OrderLines fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String Description;
  @Deprecated public int OrderLineID;
  @Deprecated public java.lang.String OrderLineLastEditedWhen;
  @Deprecated public net.syntio.beam.models.PackageType PackageType;
  @Deprecated public int PickedQuantity;
  @Deprecated public java.lang.String PickingCompletedWhen;
  @Deprecated public int Quantity;
  @Deprecated public net.syntio.beam.models.StockItem StockItem;
  @Deprecated public java.lang.String TaxRate;
  @Deprecated public java.lang.String UnitPrice;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrderLines() {}

  /**
   * All-args constructor.
   * @param Description The new value for Description
   * @param OrderLineID The new value for OrderLineID
   * @param OrderLineLastEditedWhen The new value for OrderLineLastEditedWhen
   * @param PackageType The new value for PackageType
   * @param PickedQuantity The new value for PickedQuantity
   * @param PickingCompletedWhen The new value for PickingCompletedWhen
   * @param Quantity The new value for Quantity
   * @param StockItem The new value for StockItem
   * @param TaxRate The new value for TaxRate
   * @param UnitPrice The new value for UnitPrice
   */
  public OrderLines(java.lang.String Description, java.lang.Integer OrderLineID, java.lang.String OrderLineLastEditedWhen, net.syntio.beam.models.PackageType PackageType, java.lang.Integer PickedQuantity, java.lang.String PickingCompletedWhen, java.lang.Integer Quantity, net.syntio.beam.models.StockItem StockItem, java.lang.String TaxRate, java.lang.String UnitPrice) {
    this.Description = Description;
    this.OrderLineID = OrderLineID;
    this.OrderLineLastEditedWhen = OrderLineLastEditedWhen;
    this.PackageType = PackageType;
    this.PickedQuantity = PickedQuantity;
    this.PickingCompletedWhen = PickingCompletedWhen;
    this.Quantity = Quantity;
    this.StockItem = StockItem;
    this.TaxRate = TaxRate;
    this.UnitPrice = UnitPrice;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Description;
    case 1: return OrderLineID;
    case 2: return OrderLineLastEditedWhen;
    case 3: return PackageType;
    case 4: return PickedQuantity;
    case 5: return PickingCompletedWhen;
    case 6: return Quantity;
    case 7: return StockItem;
    case 8: return TaxRate;
    case 9: return UnitPrice;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Description = (java.lang.String)value$; break;
    case 1: OrderLineID = (java.lang.Integer)value$; break;
    case 2: OrderLineLastEditedWhen = (java.lang.String)value$; break;
    case 3: PackageType = (net.syntio.beam.models.PackageType)value$; break;
    case 4: PickedQuantity = (java.lang.Integer)value$; break;
    case 5: PickingCompletedWhen = (java.lang.String)value$; break;
    case 6: Quantity = (java.lang.Integer)value$; break;
    case 7: StockItem = (net.syntio.beam.models.StockItem)value$; break;
    case 8: TaxRate = (java.lang.String)value$; break;
    case 9: UnitPrice = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'Description' field.
   * @return The value of the 'Description' field.
   */
  public java.lang.String getDescription() {
    return Description;
  }

  /**
   * Sets the value of the 'Description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.Description = value;
  }

  /**
   * Gets the value of the 'OrderLineID' field.
   * @return The value of the 'OrderLineID' field.
   */
  public java.lang.Integer getOrderLineID() {
    return OrderLineID;
  }

  /**
   * Sets the value of the 'OrderLineID' field.
   * @param value the value to set.
   */
  public void setOrderLineID(java.lang.Integer value) {
    this.OrderLineID = value;
  }

  /**
   * Gets the value of the 'OrderLineLastEditedWhen' field.
   * @return The value of the 'OrderLineLastEditedWhen' field.
   */
  public java.lang.String getOrderLineLastEditedWhen() {
    return OrderLineLastEditedWhen;
  }

  /**
   * Sets the value of the 'OrderLineLastEditedWhen' field.
   * @param value the value to set.
   */
  public void setOrderLineLastEditedWhen(java.lang.String value) {
    this.OrderLineLastEditedWhen = value;
  }

  /**
   * Gets the value of the 'PackageType' field.
   * @return The value of the 'PackageType' field.
   */
  public net.syntio.beam.models.PackageType getPackageType() {
    return PackageType;
  }

  /**
   * Sets the value of the 'PackageType' field.
   * @param value the value to set.
   */
  public void setPackageType(net.syntio.beam.models.PackageType value) {
    this.PackageType = value;
  }

  /**
   * Gets the value of the 'PickedQuantity' field.
   * @return The value of the 'PickedQuantity' field.
   */
  public java.lang.Integer getPickedQuantity() {
    return PickedQuantity;
  }

  /**
   * Sets the value of the 'PickedQuantity' field.
   * @param value the value to set.
   */
  public void setPickedQuantity(java.lang.Integer value) {
    this.PickedQuantity = value;
  }

  /**
   * Gets the value of the 'PickingCompletedWhen' field.
   * @return The value of the 'PickingCompletedWhen' field.
   */
  public java.lang.String getPickingCompletedWhen() {
    return PickingCompletedWhen;
  }

  /**
   * Sets the value of the 'PickingCompletedWhen' field.
   * @param value the value to set.
   */
  public void setPickingCompletedWhen(java.lang.String value) {
    this.PickingCompletedWhen = value;
  }

  /**
   * Gets the value of the 'Quantity' field.
   * @return The value of the 'Quantity' field.
   */
  public java.lang.Integer getQuantity() {
    return Quantity;
  }

  /**
   * Sets the value of the 'Quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.Integer value) {
    this.Quantity = value;
  }

  /**
   * Gets the value of the 'StockItem' field.
   * @return The value of the 'StockItem' field.
   */
  public net.syntio.beam.models.StockItem getStockItem() {
    return StockItem;
  }

  /**
   * Sets the value of the 'StockItem' field.
   * @param value the value to set.
   */
  public void setStockItem(net.syntio.beam.models.StockItem value) {
    this.StockItem = value;
  }

  /**
   * Gets the value of the 'TaxRate' field.
   * @return The value of the 'TaxRate' field.
   */
  public java.lang.String getTaxRate() {
    return TaxRate;
  }

  /**
   * Sets the value of the 'TaxRate' field.
   * @param value the value to set.
   */
  public void setTaxRate(java.lang.String value) {
    this.TaxRate = value;
  }

  /**
   * Gets the value of the 'UnitPrice' field.
   * @return The value of the 'UnitPrice' field.
   */
  public java.lang.String getUnitPrice() {
    return UnitPrice;
  }

  /**
   * Sets the value of the 'UnitPrice' field.
   * @param value the value to set.
   */
  public void setUnitPrice(java.lang.String value) {
    this.UnitPrice = value;
  }

  /**
   * Creates a new OrderLines RecordBuilder.
   * @return A new OrderLines RecordBuilder
   */
  public static net.syntio.beam.models.OrderLines.Builder newBuilder() {
    return new net.syntio.beam.models.OrderLines.Builder();
  }

  /**
   * Creates a new OrderLines RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrderLines RecordBuilder
   */
  public static net.syntio.beam.models.OrderLines.Builder newBuilder(net.syntio.beam.models.OrderLines.Builder other) {
    return new net.syntio.beam.models.OrderLines.Builder(other);
  }

  /**
   * Creates a new OrderLines RecordBuilder by copying an existing OrderLines instance.
   * @param other The existing instance to copy.
   * @return A new OrderLines RecordBuilder
   */
  public static net.syntio.beam.models.OrderLines.Builder newBuilder(net.syntio.beam.models.OrderLines other) {
    return new net.syntio.beam.models.OrderLines.Builder(other);
  }

  /**
   * RecordBuilder for OrderLines instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderLines>
    implements org.apache.avro.data.RecordBuilder<OrderLines> {

    private java.lang.String Description;
    private int OrderLineID;
    private java.lang.String OrderLineLastEditedWhen;
    private net.syntio.beam.models.PackageType PackageType;
    private net.syntio.beam.models.PackageType.Builder PackageTypeBuilder;
    private int PickedQuantity;
    private java.lang.String PickingCompletedWhen;
    private int Quantity;
    private net.syntio.beam.models.StockItem StockItem;
    private net.syntio.beam.models.StockItem.Builder StockItemBuilder;
    private java.lang.String TaxRate;
    private java.lang.String UnitPrice;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.syntio.beam.models.OrderLines.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Description)) {
        this.Description = data().deepCopy(fields()[0].schema(), other.Description);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.OrderLineID)) {
        this.OrderLineID = data().deepCopy(fields()[1].schema(), other.OrderLineID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.OrderLineLastEditedWhen)) {
        this.OrderLineLastEditedWhen = data().deepCopy(fields()[2].schema(), other.OrderLineLastEditedWhen);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.PackageType)) {
        this.PackageType = data().deepCopy(fields()[3].schema(), other.PackageType);
        fieldSetFlags()[3] = true;
      }
      if (other.hasPackageTypeBuilder()) {
        this.PackageTypeBuilder = net.syntio.beam.models.PackageType.newBuilder(other.getPackageTypeBuilder());
      }
      if (isValidValue(fields()[4], other.PickedQuantity)) {
        this.PickedQuantity = data().deepCopy(fields()[4].schema(), other.PickedQuantity);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.PickingCompletedWhen)) {
        this.PickingCompletedWhen = data().deepCopy(fields()[5].schema(), other.PickingCompletedWhen);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Quantity)) {
        this.Quantity = data().deepCopy(fields()[6].schema(), other.Quantity);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.StockItem)) {
        this.StockItem = data().deepCopy(fields()[7].schema(), other.StockItem);
        fieldSetFlags()[7] = true;
      }
      if (other.hasStockItemBuilder()) {
        this.StockItemBuilder = net.syntio.beam.models.StockItem.newBuilder(other.getStockItemBuilder());
      }
      if (isValidValue(fields()[8], other.TaxRate)) {
        this.TaxRate = data().deepCopy(fields()[8].schema(), other.TaxRate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.UnitPrice)) {
        this.UnitPrice = data().deepCopy(fields()[9].schema(), other.UnitPrice);
        fieldSetFlags()[9] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing OrderLines instance
     * @param other The existing instance to copy.
     */
    private Builder(net.syntio.beam.models.OrderLines other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.Description)) {
        this.Description = data().deepCopy(fields()[0].schema(), other.Description);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.OrderLineID)) {
        this.OrderLineID = data().deepCopy(fields()[1].schema(), other.OrderLineID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.OrderLineLastEditedWhen)) {
        this.OrderLineLastEditedWhen = data().deepCopy(fields()[2].schema(), other.OrderLineLastEditedWhen);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.PackageType)) {
        this.PackageType = data().deepCopy(fields()[3].schema(), other.PackageType);
        fieldSetFlags()[3] = true;
      }
      this.PackageTypeBuilder = null;
      if (isValidValue(fields()[4], other.PickedQuantity)) {
        this.PickedQuantity = data().deepCopy(fields()[4].schema(), other.PickedQuantity);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.PickingCompletedWhen)) {
        this.PickingCompletedWhen = data().deepCopy(fields()[5].schema(), other.PickingCompletedWhen);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Quantity)) {
        this.Quantity = data().deepCopy(fields()[6].schema(), other.Quantity);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.StockItem)) {
        this.StockItem = data().deepCopy(fields()[7].schema(), other.StockItem);
        fieldSetFlags()[7] = true;
      }
      this.StockItemBuilder = null;
      if (isValidValue(fields()[8], other.TaxRate)) {
        this.TaxRate = data().deepCopy(fields()[8].schema(), other.TaxRate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.UnitPrice)) {
        this.UnitPrice = data().deepCopy(fields()[9].schema(), other.UnitPrice);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'Description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return Description;
    }

    /**
      * Sets the value of the 'Description' field.
      * @param value The value of 'Description'.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder setDescription(java.lang.String value) {
      validate(fields()[0], value);
      this.Description = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'Description' field has been set.
      * @return True if the 'Description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'Description' field.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder clearDescription() {
      Description = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderLineID' field.
      * @return The value.
      */
    public java.lang.Integer getOrderLineID() {
      return OrderLineID;
    }

    /**
      * Sets the value of the 'OrderLineID' field.
      * @param value The value of 'OrderLineID'.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder setOrderLineID(int value) {
      validate(fields()[1], value);
      this.OrderLineID = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderLineID' field has been set.
      * @return True if the 'OrderLineID' field has been set, false otherwise.
      */
    public boolean hasOrderLineID() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'OrderLineID' field.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder clearOrderLineID() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderLineLastEditedWhen' field.
      * @return The value.
      */
    public java.lang.String getOrderLineLastEditedWhen() {
      return OrderLineLastEditedWhen;
    }

    /**
      * Sets the value of the 'OrderLineLastEditedWhen' field.
      * @param value The value of 'OrderLineLastEditedWhen'.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder setOrderLineLastEditedWhen(java.lang.String value) {
      validate(fields()[2], value);
      this.OrderLineLastEditedWhen = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderLineLastEditedWhen' field has been set.
      * @return True if the 'OrderLineLastEditedWhen' field has been set, false otherwise.
      */
    public boolean hasOrderLineLastEditedWhen() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'OrderLineLastEditedWhen' field.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder clearOrderLineLastEditedWhen() {
      OrderLineLastEditedWhen = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'PackageType' field.
      * @return The value.
      */
    public net.syntio.beam.models.PackageType getPackageType() {
      return PackageType;
    }

    /**
      * Sets the value of the 'PackageType' field.
      * @param value The value of 'PackageType'.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder setPackageType(net.syntio.beam.models.PackageType value) {
      validate(fields()[3], value);
      this.PackageTypeBuilder = null;
      this.PackageType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'PackageType' field has been set.
      * @return True if the 'PackageType' field has been set, false otherwise.
      */
    public boolean hasPackageType() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'PackageType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public net.syntio.beam.models.PackageType.Builder getPackageTypeBuilder() {
      if (PackageTypeBuilder == null) {
        if (hasPackageType()) {
          setPackageTypeBuilder(net.syntio.beam.models.PackageType.newBuilder(PackageType));
        } else {
          setPackageTypeBuilder(net.syntio.beam.models.PackageType.newBuilder());
        }
      }
      return PackageTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'PackageType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public net.syntio.beam.models.OrderLines.Builder setPackageTypeBuilder(net.syntio.beam.models.PackageType.Builder value) {
      clearPackageType();
      PackageTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'PackageType' field has an active Builder instance
     * @return True if the 'PackageType' field has an active Builder instance
     */
    public boolean hasPackageTypeBuilder() {
      return PackageTypeBuilder != null;
    }

    /**
      * Clears the value of the 'PackageType' field.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder clearPackageType() {
      PackageType = null;
      PackageTypeBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'PickedQuantity' field.
      * @return The value.
      */
    public java.lang.Integer getPickedQuantity() {
      return PickedQuantity;
    }

    /**
      * Sets the value of the 'PickedQuantity' field.
      * @param value The value of 'PickedQuantity'.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder setPickedQuantity(int value) {
      validate(fields()[4], value);
      this.PickedQuantity = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'PickedQuantity' field has been set.
      * @return True if the 'PickedQuantity' field has been set, false otherwise.
      */
    public boolean hasPickedQuantity() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'PickedQuantity' field.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder clearPickedQuantity() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'PickingCompletedWhen' field.
      * @return The value.
      */
    public java.lang.String getPickingCompletedWhen() {
      return PickingCompletedWhen;
    }

    /**
      * Sets the value of the 'PickingCompletedWhen' field.
      * @param value The value of 'PickingCompletedWhen'.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder setPickingCompletedWhen(java.lang.String value) {
      validate(fields()[5], value);
      this.PickingCompletedWhen = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'PickingCompletedWhen' field has been set.
      * @return True if the 'PickingCompletedWhen' field has been set, false otherwise.
      */
    public boolean hasPickingCompletedWhen() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'PickingCompletedWhen' field.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder clearPickingCompletedWhen() {
      PickingCompletedWhen = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'Quantity' field.
      * @return The value.
      */
    public java.lang.Integer getQuantity() {
      return Quantity;
    }

    /**
      * Sets the value of the 'Quantity' field.
      * @param value The value of 'Quantity'.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder setQuantity(int value) {
      validate(fields()[6], value);
      this.Quantity = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'Quantity' field has been set.
      * @return True if the 'Quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'Quantity' field.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder clearQuantity() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'StockItem' field.
      * @return The value.
      */
    public net.syntio.beam.models.StockItem getStockItem() {
      return StockItem;
    }

    /**
      * Sets the value of the 'StockItem' field.
      * @param value The value of 'StockItem'.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder setStockItem(net.syntio.beam.models.StockItem value) {
      validate(fields()[7], value);
      this.StockItemBuilder = null;
      this.StockItem = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'StockItem' field has been set.
      * @return True if the 'StockItem' field has been set, false otherwise.
      */
    public boolean hasStockItem() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'StockItem' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public net.syntio.beam.models.StockItem.Builder getStockItemBuilder() {
      if (StockItemBuilder == null) {
        if (hasStockItem()) {
          setStockItemBuilder(net.syntio.beam.models.StockItem.newBuilder(StockItem));
        } else {
          setStockItemBuilder(net.syntio.beam.models.StockItem.newBuilder());
        }
      }
      return StockItemBuilder;
    }

    /**
     * Sets the Builder instance for the 'StockItem' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public net.syntio.beam.models.OrderLines.Builder setStockItemBuilder(net.syntio.beam.models.StockItem.Builder value) {
      clearStockItem();
      StockItemBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'StockItem' field has an active Builder instance
     * @return True if the 'StockItem' field has an active Builder instance
     */
    public boolean hasStockItemBuilder() {
      return StockItemBuilder != null;
    }

    /**
      * Clears the value of the 'StockItem' field.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder clearStockItem() {
      StockItem = null;
      StockItemBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'TaxRate' field.
      * @return The value.
      */
    public java.lang.String getTaxRate() {
      return TaxRate;
    }

    /**
      * Sets the value of the 'TaxRate' field.
      * @param value The value of 'TaxRate'.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder setTaxRate(java.lang.String value) {
      validate(fields()[8], value);
      this.TaxRate = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'TaxRate' field has been set.
      * @return True if the 'TaxRate' field has been set, false otherwise.
      */
    public boolean hasTaxRate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'TaxRate' field.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder clearTaxRate() {
      TaxRate = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'UnitPrice' field.
      * @return The value.
      */
    public java.lang.String getUnitPrice() {
      return UnitPrice;
    }

    /**
      * Sets the value of the 'UnitPrice' field.
      * @param value The value of 'UnitPrice'.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder setUnitPrice(java.lang.String value) {
      validate(fields()[9], value);
      this.UnitPrice = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'UnitPrice' field has been set.
      * @return True if the 'UnitPrice' field has been set, false otherwise.
      */
    public boolean hasUnitPrice() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'UnitPrice' field.
      * @return This builder.
      */
    public net.syntio.beam.models.OrderLines.Builder clearUnitPrice() {
      UnitPrice = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderLines build() {
      try {
        OrderLines record = new OrderLines();
        record.Description = fieldSetFlags()[0] ? this.Description : (java.lang.String) defaultValue(fields()[0]);
        record.OrderLineID = fieldSetFlags()[1] ? this.OrderLineID : (java.lang.Integer) defaultValue(fields()[1]);
        record.OrderLineLastEditedWhen = fieldSetFlags()[2] ? this.OrderLineLastEditedWhen : (java.lang.String) defaultValue(fields()[2]);
        if (PackageTypeBuilder != null) {
          record.PackageType = this.PackageTypeBuilder.build();
        } else {
          record.PackageType = fieldSetFlags()[3] ? this.PackageType : (net.syntio.beam.models.PackageType) defaultValue(fields()[3]);
        }
        record.PickedQuantity = fieldSetFlags()[4] ? this.PickedQuantity : (java.lang.Integer) defaultValue(fields()[4]);
        record.PickingCompletedWhen = fieldSetFlags()[5] ? this.PickingCompletedWhen : (java.lang.String) defaultValue(fields()[5]);
        record.Quantity = fieldSetFlags()[6] ? this.Quantity : (java.lang.Integer) defaultValue(fields()[6]);
        if (StockItemBuilder != null) {
          record.StockItem = this.StockItemBuilder.build();
        } else {
          record.StockItem = fieldSetFlags()[7] ? this.StockItem : (net.syntio.beam.models.StockItem) defaultValue(fields()[7]);
        }
        record.TaxRate = fieldSetFlags()[8] ? this.TaxRate : (java.lang.String) defaultValue(fields()[8]);
        record.UnitPrice = fieldSetFlags()[9] ? this.UnitPrice : (java.lang.String) defaultValue(fields()[9]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderLines>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrderLines>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderLines>
    READER$ = (org.apache.avro.io.DatumReader<OrderLines>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
