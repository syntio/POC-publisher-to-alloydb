/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.syntio.beam.models;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SalesPerson extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8657127589667453913L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SalesPerson\",\"namespace\":\"net.syntio.beam.models\",\"fields\":[{\"name\":\"EmailAddress\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"FullName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"HashedPassword\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"IsEmployee\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"IsExternalLogonProvider\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"IsPermittedToLogon\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"IsSalesperson\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"IsSystemUser\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"LogonName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"OtherLanguages\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"PreferredName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"SalesPersonCustomFields\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"SalesPersonFaxNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"SalesPersonID\",\"type\":\"int\"},{\"name\":\"SalesPersonPhoneNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"SalespersonValidFrom\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"SalespersonValidTo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"SearchName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"UserPreferences\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SalesPerson> ENCODER =
      new BinaryMessageEncoder<SalesPerson>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SalesPerson> DECODER =
      new BinaryMessageDecoder<SalesPerson>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SalesPerson> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SalesPerson> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SalesPerson>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SalesPerson to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SalesPerson from a ByteBuffer. */
  public static SalesPerson fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String EmailAddress;
  @Deprecated public java.lang.String FullName;
  @Deprecated public java.lang.String HashedPassword;
  @Deprecated public java.lang.String IsEmployee;
  @Deprecated public java.lang.String IsExternalLogonProvider;
  @Deprecated public java.lang.String IsPermittedToLogon;
  @Deprecated public java.lang.String IsSalesperson;
  @Deprecated public java.lang.String IsSystemUser;
  @Deprecated public java.lang.String LogonName;
  @Deprecated public java.lang.String OtherLanguages;
  @Deprecated public java.lang.String PreferredName;
  @Deprecated public java.lang.String SalesPersonCustomFields;
  @Deprecated public java.lang.String SalesPersonFaxNumber;
  @Deprecated public int SalesPersonID;
  @Deprecated public java.lang.String SalesPersonPhoneNumber;
  @Deprecated public java.lang.String SalespersonValidFrom;
  @Deprecated public java.lang.String SalespersonValidTo;
  @Deprecated public java.lang.String SearchName;
  @Deprecated public java.lang.String UserPreferences;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SalesPerson() {}

  /**
   * All-args constructor.
   * @param EmailAddress The new value for EmailAddress
   * @param FullName The new value for FullName
   * @param HashedPassword The new value for HashedPassword
   * @param IsEmployee The new value for IsEmployee
   * @param IsExternalLogonProvider The new value for IsExternalLogonProvider
   * @param IsPermittedToLogon The new value for IsPermittedToLogon
   * @param IsSalesperson The new value for IsSalesperson
   * @param IsSystemUser The new value for IsSystemUser
   * @param LogonName The new value for LogonName
   * @param OtherLanguages The new value for OtherLanguages
   * @param PreferredName The new value for PreferredName
   * @param SalesPersonCustomFields The new value for SalesPersonCustomFields
   * @param SalesPersonFaxNumber The new value for SalesPersonFaxNumber
   * @param SalesPersonID The new value for SalesPersonID
   * @param SalesPersonPhoneNumber The new value for SalesPersonPhoneNumber
   * @param SalespersonValidFrom The new value for SalespersonValidFrom
   * @param SalespersonValidTo The new value for SalespersonValidTo
   * @param SearchName The new value for SearchName
   * @param UserPreferences The new value for UserPreferences
   */
  public SalesPerson(java.lang.String EmailAddress, java.lang.String FullName, java.lang.String HashedPassword, java.lang.String IsEmployee, java.lang.String IsExternalLogonProvider, java.lang.String IsPermittedToLogon, java.lang.String IsSalesperson, java.lang.String IsSystemUser, java.lang.String LogonName, java.lang.String OtherLanguages, java.lang.String PreferredName, java.lang.String SalesPersonCustomFields, java.lang.String SalesPersonFaxNumber, java.lang.Integer SalesPersonID, java.lang.String SalesPersonPhoneNumber, java.lang.String SalespersonValidFrom, java.lang.String SalespersonValidTo, java.lang.String SearchName, java.lang.String UserPreferences) {
    this.EmailAddress = EmailAddress;
    this.FullName = FullName;
    this.HashedPassword = HashedPassword;
    this.IsEmployee = IsEmployee;
    this.IsExternalLogonProvider = IsExternalLogonProvider;
    this.IsPermittedToLogon = IsPermittedToLogon;
    this.IsSalesperson = IsSalesperson;
    this.IsSystemUser = IsSystemUser;
    this.LogonName = LogonName;
    this.OtherLanguages = OtherLanguages;
    this.PreferredName = PreferredName;
    this.SalesPersonCustomFields = SalesPersonCustomFields;
    this.SalesPersonFaxNumber = SalesPersonFaxNumber;
    this.SalesPersonID = SalesPersonID;
    this.SalesPersonPhoneNumber = SalesPersonPhoneNumber;
    this.SalespersonValidFrom = SalespersonValidFrom;
    this.SalespersonValidTo = SalespersonValidTo;
    this.SearchName = SearchName;
    this.UserPreferences = UserPreferences;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return EmailAddress;
    case 1: return FullName;
    case 2: return HashedPassword;
    case 3: return IsEmployee;
    case 4: return IsExternalLogonProvider;
    case 5: return IsPermittedToLogon;
    case 6: return IsSalesperson;
    case 7: return IsSystemUser;
    case 8: return LogonName;
    case 9: return OtherLanguages;
    case 10: return PreferredName;
    case 11: return SalesPersonCustomFields;
    case 12: return SalesPersonFaxNumber;
    case 13: return SalesPersonID;
    case 14: return SalesPersonPhoneNumber;
    case 15: return SalespersonValidFrom;
    case 16: return SalespersonValidTo;
    case 17: return SearchName;
    case 18: return UserPreferences;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: EmailAddress = (java.lang.String)value$; break;
    case 1: FullName = (java.lang.String)value$; break;
    case 2: HashedPassword = (java.lang.String)value$; break;
    case 3: IsEmployee = (java.lang.String)value$; break;
    case 4: IsExternalLogonProvider = (java.lang.String)value$; break;
    case 5: IsPermittedToLogon = (java.lang.String)value$; break;
    case 6: IsSalesperson = (java.lang.String)value$; break;
    case 7: IsSystemUser = (java.lang.String)value$; break;
    case 8: LogonName = (java.lang.String)value$; break;
    case 9: OtherLanguages = (java.lang.String)value$; break;
    case 10: PreferredName = (java.lang.String)value$; break;
    case 11: SalesPersonCustomFields = (java.lang.String)value$; break;
    case 12: SalesPersonFaxNumber = (java.lang.String)value$; break;
    case 13: SalesPersonID = (java.lang.Integer)value$; break;
    case 14: SalesPersonPhoneNumber = (java.lang.String)value$; break;
    case 15: SalespersonValidFrom = (java.lang.String)value$; break;
    case 16: SalespersonValidTo = (java.lang.String)value$; break;
    case 17: SearchName = (java.lang.String)value$; break;
    case 18: UserPreferences = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'EmailAddress' field.
   * @return The value of the 'EmailAddress' field.
   */
  public java.lang.String getEmailAddress() {
    return EmailAddress;
  }

  /**
   * Sets the value of the 'EmailAddress' field.
   * @param value the value to set.
   */
  public void setEmailAddress(java.lang.String value) {
    this.EmailAddress = value;
  }

  /**
   * Gets the value of the 'FullName' field.
   * @return The value of the 'FullName' field.
   */
  public java.lang.String getFullName() {
    return FullName;
  }

  /**
   * Sets the value of the 'FullName' field.
   * @param value the value to set.
   */
  public void setFullName(java.lang.String value) {
    this.FullName = value;
  }

  /**
   * Gets the value of the 'HashedPassword' field.
   * @return The value of the 'HashedPassword' field.
   */
  public java.lang.String getHashedPassword() {
    return HashedPassword;
  }

  /**
   * Sets the value of the 'HashedPassword' field.
   * @param value the value to set.
   */
  public void setHashedPassword(java.lang.String value) {
    this.HashedPassword = value;
  }

  /**
   * Gets the value of the 'IsEmployee' field.
   * @return The value of the 'IsEmployee' field.
   */
  public java.lang.String getIsEmployee() {
    return IsEmployee;
  }

  /**
   * Sets the value of the 'IsEmployee' field.
   * @param value the value to set.
   */
  public void setIsEmployee(java.lang.String value) {
    this.IsEmployee = value;
  }

  /**
   * Gets the value of the 'IsExternalLogonProvider' field.
   * @return The value of the 'IsExternalLogonProvider' field.
   */
  public java.lang.String getIsExternalLogonProvider() {
    return IsExternalLogonProvider;
  }

  /**
   * Sets the value of the 'IsExternalLogonProvider' field.
   * @param value the value to set.
   */
  public void setIsExternalLogonProvider(java.lang.String value) {
    this.IsExternalLogonProvider = value;
  }

  /**
   * Gets the value of the 'IsPermittedToLogon' field.
   * @return The value of the 'IsPermittedToLogon' field.
   */
  public java.lang.String getIsPermittedToLogon() {
    return IsPermittedToLogon;
  }

  /**
   * Sets the value of the 'IsPermittedToLogon' field.
   * @param value the value to set.
   */
  public void setIsPermittedToLogon(java.lang.String value) {
    this.IsPermittedToLogon = value;
  }

  /**
   * Gets the value of the 'IsSalesperson' field.
   * @return The value of the 'IsSalesperson' field.
   */
  public java.lang.String getIsSalesperson() {
    return IsSalesperson;
  }

  /**
   * Sets the value of the 'IsSalesperson' field.
   * @param value the value to set.
   */
  public void setIsSalesperson(java.lang.String value) {
    this.IsSalesperson = value;
  }

  /**
   * Gets the value of the 'IsSystemUser' field.
   * @return The value of the 'IsSystemUser' field.
   */
  public java.lang.String getIsSystemUser() {
    return IsSystemUser;
  }

  /**
   * Sets the value of the 'IsSystemUser' field.
   * @param value the value to set.
   */
  public void setIsSystemUser(java.lang.String value) {
    this.IsSystemUser = value;
  }

  /**
   * Gets the value of the 'LogonName' field.
   * @return The value of the 'LogonName' field.
   */
  public java.lang.String getLogonName() {
    return LogonName;
  }

  /**
   * Sets the value of the 'LogonName' field.
   * @param value the value to set.
   */
  public void setLogonName(java.lang.String value) {
    this.LogonName = value;
  }

  /**
   * Gets the value of the 'OtherLanguages' field.
   * @return The value of the 'OtherLanguages' field.
   */
  public java.lang.String getOtherLanguages() {
    return OtherLanguages;
  }

  /**
   * Sets the value of the 'OtherLanguages' field.
   * @param value the value to set.
   */
  public void setOtherLanguages(java.lang.String value) {
    this.OtherLanguages = value;
  }

  /**
   * Gets the value of the 'PreferredName' field.
   * @return The value of the 'PreferredName' field.
   */
  public java.lang.String getPreferredName() {
    return PreferredName;
  }

  /**
   * Sets the value of the 'PreferredName' field.
   * @param value the value to set.
   */
  public void setPreferredName(java.lang.String value) {
    this.PreferredName = value;
  }

  /**
   * Gets the value of the 'SalesPersonCustomFields' field.
   * @return The value of the 'SalesPersonCustomFields' field.
   */
  public java.lang.String getSalesPersonCustomFields() {
    return SalesPersonCustomFields;
  }

  /**
   * Sets the value of the 'SalesPersonCustomFields' field.
   * @param value the value to set.
   */
  public void setSalesPersonCustomFields(java.lang.String value) {
    this.SalesPersonCustomFields = value;
  }

  /**
   * Gets the value of the 'SalesPersonFaxNumber' field.
   * @return The value of the 'SalesPersonFaxNumber' field.
   */
  public java.lang.String getSalesPersonFaxNumber() {
    return SalesPersonFaxNumber;
  }

  /**
   * Sets the value of the 'SalesPersonFaxNumber' field.
   * @param value the value to set.
   */
  public void setSalesPersonFaxNumber(java.lang.String value) {
    this.SalesPersonFaxNumber = value;
  }

  /**
   * Gets the value of the 'SalesPersonID' field.
   * @return The value of the 'SalesPersonID' field.
   */
  public java.lang.Integer getSalesPersonID() {
    return SalesPersonID;
  }

  /**
   * Sets the value of the 'SalesPersonID' field.
   * @param value the value to set.
   */
  public void setSalesPersonID(java.lang.Integer value) {
    this.SalesPersonID = value;
  }

  /**
   * Gets the value of the 'SalesPersonPhoneNumber' field.
   * @return The value of the 'SalesPersonPhoneNumber' field.
   */
  public java.lang.String getSalesPersonPhoneNumber() {
    return SalesPersonPhoneNumber;
  }

  /**
   * Sets the value of the 'SalesPersonPhoneNumber' field.
   * @param value the value to set.
   */
  public void setSalesPersonPhoneNumber(java.lang.String value) {
    this.SalesPersonPhoneNumber = value;
  }

  /**
   * Gets the value of the 'SalespersonValidFrom' field.
   * @return The value of the 'SalespersonValidFrom' field.
   */
  public java.lang.String getSalespersonValidFrom() {
    return SalespersonValidFrom;
  }

  /**
   * Sets the value of the 'SalespersonValidFrom' field.
   * @param value the value to set.
   */
  public void setSalespersonValidFrom(java.lang.String value) {
    this.SalespersonValidFrom = value;
  }

  /**
   * Gets the value of the 'SalespersonValidTo' field.
   * @return The value of the 'SalespersonValidTo' field.
   */
  public java.lang.String getSalespersonValidTo() {
    return SalespersonValidTo;
  }

  /**
   * Sets the value of the 'SalespersonValidTo' field.
   * @param value the value to set.
   */
  public void setSalespersonValidTo(java.lang.String value) {
    this.SalespersonValidTo = value;
  }

  /**
   * Gets the value of the 'SearchName' field.
   * @return The value of the 'SearchName' field.
   */
  public java.lang.String getSearchName() {
    return SearchName;
  }

  /**
   * Sets the value of the 'SearchName' field.
   * @param value the value to set.
   */
  public void setSearchName(java.lang.String value) {
    this.SearchName = value;
  }

  /**
   * Gets the value of the 'UserPreferences' field.
   * @return The value of the 'UserPreferences' field.
   */
  public java.lang.String getUserPreferences() {
    return UserPreferences;
  }

  /**
   * Sets the value of the 'UserPreferences' field.
   * @param value the value to set.
   */
  public void setUserPreferences(java.lang.String value) {
    this.UserPreferences = value;
  }

  /**
   * Creates a new SalesPerson RecordBuilder.
   * @return A new SalesPerson RecordBuilder
   */
  public static net.syntio.beam.models.SalesPerson.Builder newBuilder() {
    return new net.syntio.beam.models.SalesPerson.Builder();
  }

  /**
   * Creates a new SalesPerson RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SalesPerson RecordBuilder
   */
  public static net.syntio.beam.models.SalesPerson.Builder newBuilder(net.syntio.beam.models.SalesPerson.Builder other) {
    return new net.syntio.beam.models.SalesPerson.Builder(other);
  }

  /**
   * Creates a new SalesPerson RecordBuilder by copying an existing SalesPerson instance.
   * @param other The existing instance to copy.
   * @return A new SalesPerson RecordBuilder
   */
  public static net.syntio.beam.models.SalesPerson.Builder newBuilder(net.syntio.beam.models.SalesPerson other) {
    return new net.syntio.beam.models.SalesPerson.Builder(other);
  }

  /**
   * RecordBuilder for SalesPerson instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SalesPerson>
    implements org.apache.avro.data.RecordBuilder<SalesPerson> {

    private java.lang.String EmailAddress;
    private java.lang.String FullName;
    private java.lang.String HashedPassword;
    private java.lang.String IsEmployee;
    private java.lang.String IsExternalLogonProvider;
    private java.lang.String IsPermittedToLogon;
    private java.lang.String IsSalesperson;
    private java.lang.String IsSystemUser;
    private java.lang.String LogonName;
    private java.lang.String OtherLanguages;
    private java.lang.String PreferredName;
    private java.lang.String SalesPersonCustomFields;
    private java.lang.String SalesPersonFaxNumber;
    private int SalesPersonID;
    private java.lang.String SalesPersonPhoneNumber;
    private java.lang.String SalespersonValidFrom;
    private java.lang.String SalespersonValidTo;
    private java.lang.String SearchName;
    private java.lang.String UserPreferences;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.syntio.beam.models.SalesPerson.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.EmailAddress)) {
        this.EmailAddress = data().deepCopy(fields()[0].schema(), other.EmailAddress);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.FullName)) {
        this.FullName = data().deepCopy(fields()[1].schema(), other.FullName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.HashedPassword)) {
        this.HashedPassword = data().deepCopy(fields()[2].schema(), other.HashedPassword);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.IsEmployee)) {
        this.IsEmployee = data().deepCopy(fields()[3].schema(), other.IsEmployee);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.IsExternalLogonProvider)) {
        this.IsExternalLogonProvider = data().deepCopy(fields()[4].schema(), other.IsExternalLogonProvider);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.IsPermittedToLogon)) {
        this.IsPermittedToLogon = data().deepCopy(fields()[5].schema(), other.IsPermittedToLogon);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.IsSalesperson)) {
        this.IsSalesperson = data().deepCopy(fields()[6].schema(), other.IsSalesperson);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.IsSystemUser)) {
        this.IsSystemUser = data().deepCopy(fields()[7].schema(), other.IsSystemUser);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.LogonName)) {
        this.LogonName = data().deepCopy(fields()[8].schema(), other.LogonName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.OtherLanguages)) {
        this.OtherLanguages = data().deepCopy(fields()[9].schema(), other.OtherLanguages);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.PreferredName)) {
        this.PreferredName = data().deepCopy(fields()[10].schema(), other.PreferredName);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.SalesPersonCustomFields)) {
        this.SalesPersonCustomFields = data().deepCopy(fields()[11].schema(), other.SalesPersonCustomFields);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.SalesPersonFaxNumber)) {
        this.SalesPersonFaxNumber = data().deepCopy(fields()[12].schema(), other.SalesPersonFaxNumber);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.SalesPersonID)) {
        this.SalesPersonID = data().deepCopy(fields()[13].schema(), other.SalesPersonID);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.SalesPersonPhoneNumber)) {
        this.SalesPersonPhoneNumber = data().deepCopy(fields()[14].schema(), other.SalesPersonPhoneNumber);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.SalespersonValidFrom)) {
        this.SalespersonValidFrom = data().deepCopy(fields()[15].schema(), other.SalespersonValidFrom);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.SalespersonValidTo)) {
        this.SalespersonValidTo = data().deepCopy(fields()[16].schema(), other.SalespersonValidTo);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.SearchName)) {
        this.SearchName = data().deepCopy(fields()[17].schema(), other.SearchName);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.UserPreferences)) {
        this.UserPreferences = data().deepCopy(fields()[18].schema(), other.UserPreferences);
        fieldSetFlags()[18] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SalesPerson instance
     * @param other The existing instance to copy.
     */
    private Builder(net.syntio.beam.models.SalesPerson other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.EmailAddress)) {
        this.EmailAddress = data().deepCopy(fields()[0].schema(), other.EmailAddress);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.FullName)) {
        this.FullName = data().deepCopy(fields()[1].schema(), other.FullName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.HashedPassword)) {
        this.HashedPassword = data().deepCopy(fields()[2].schema(), other.HashedPassword);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.IsEmployee)) {
        this.IsEmployee = data().deepCopy(fields()[3].schema(), other.IsEmployee);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.IsExternalLogonProvider)) {
        this.IsExternalLogonProvider = data().deepCopy(fields()[4].schema(), other.IsExternalLogonProvider);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.IsPermittedToLogon)) {
        this.IsPermittedToLogon = data().deepCopy(fields()[5].schema(), other.IsPermittedToLogon);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.IsSalesperson)) {
        this.IsSalesperson = data().deepCopy(fields()[6].schema(), other.IsSalesperson);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.IsSystemUser)) {
        this.IsSystemUser = data().deepCopy(fields()[7].schema(), other.IsSystemUser);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.LogonName)) {
        this.LogonName = data().deepCopy(fields()[8].schema(), other.LogonName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.OtherLanguages)) {
        this.OtherLanguages = data().deepCopy(fields()[9].schema(), other.OtherLanguages);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.PreferredName)) {
        this.PreferredName = data().deepCopy(fields()[10].schema(), other.PreferredName);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.SalesPersonCustomFields)) {
        this.SalesPersonCustomFields = data().deepCopy(fields()[11].schema(), other.SalesPersonCustomFields);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.SalesPersonFaxNumber)) {
        this.SalesPersonFaxNumber = data().deepCopy(fields()[12].schema(), other.SalesPersonFaxNumber);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.SalesPersonID)) {
        this.SalesPersonID = data().deepCopy(fields()[13].schema(), other.SalesPersonID);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.SalesPersonPhoneNumber)) {
        this.SalesPersonPhoneNumber = data().deepCopy(fields()[14].schema(), other.SalesPersonPhoneNumber);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.SalespersonValidFrom)) {
        this.SalespersonValidFrom = data().deepCopy(fields()[15].schema(), other.SalespersonValidFrom);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.SalespersonValidTo)) {
        this.SalespersonValidTo = data().deepCopy(fields()[16].schema(), other.SalespersonValidTo);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.SearchName)) {
        this.SearchName = data().deepCopy(fields()[17].schema(), other.SearchName);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.UserPreferences)) {
        this.UserPreferences = data().deepCopy(fields()[18].schema(), other.UserPreferences);
        fieldSetFlags()[18] = true;
      }
    }

    /**
      * Gets the value of the 'EmailAddress' field.
      * @return The value.
      */
    public java.lang.String getEmailAddress() {
      return EmailAddress;
    }

    /**
      * Sets the value of the 'EmailAddress' field.
      * @param value The value of 'EmailAddress'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setEmailAddress(java.lang.String value) {
      validate(fields()[0], value);
      this.EmailAddress = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'EmailAddress' field has been set.
      * @return True if the 'EmailAddress' field has been set, false otherwise.
      */
    public boolean hasEmailAddress() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'EmailAddress' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearEmailAddress() {
      EmailAddress = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'FullName' field.
      * @return The value.
      */
    public java.lang.String getFullName() {
      return FullName;
    }

    /**
      * Sets the value of the 'FullName' field.
      * @param value The value of 'FullName'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setFullName(java.lang.String value) {
      validate(fields()[1], value);
      this.FullName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'FullName' field has been set.
      * @return True if the 'FullName' field has been set, false otherwise.
      */
    public boolean hasFullName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'FullName' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearFullName() {
      FullName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'HashedPassword' field.
      * @return The value.
      */
    public java.lang.String getHashedPassword() {
      return HashedPassword;
    }

    /**
      * Sets the value of the 'HashedPassword' field.
      * @param value The value of 'HashedPassword'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setHashedPassword(java.lang.String value) {
      validate(fields()[2], value);
      this.HashedPassword = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'HashedPassword' field has been set.
      * @return True if the 'HashedPassword' field has been set, false otherwise.
      */
    public boolean hasHashedPassword() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'HashedPassword' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearHashedPassword() {
      HashedPassword = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'IsEmployee' field.
      * @return The value.
      */
    public java.lang.String getIsEmployee() {
      return IsEmployee;
    }

    /**
      * Sets the value of the 'IsEmployee' field.
      * @param value The value of 'IsEmployee'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setIsEmployee(java.lang.String value) {
      validate(fields()[3], value);
      this.IsEmployee = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'IsEmployee' field has been set.
      * @return True if the 'IsEmployee' field has been set, false otherwise.
      */
    public boolean hasIsEmployee() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'IsEmployee' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearIsEmployee() {
      IsEmployee = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'IsExternalLogonProvider' field.
      * @return The value.
      */
    public java.lang.String getIsExternalLogonProvider() {
      return IsExternalLogonProvider;
    }

    /**
      * Sets the value of the 'IsExternalLogonProvider' field.
      * @param value The value of 'IsExternalLogonProvider'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setIsExternalLogonProvider(java.lang.String value) {
      validate(fields()[4], value);
      this.IsExternalLogonProvider = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'IsExternalLogonProvider' field has been set.
      * @return True if the 'IsExternalLogonProvider' field has been set, false otherwise.
      */
    public boolean hasIsExternalLogonProvider() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'IsExternalLogonProvider' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearIsExternalLogonProvider() {
      IsExternalLogonProvider = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'IsPermittedToLogon' field.
      * @return The value.
      */
    public java.lang.String getIsPermittedToLogon() {
      return IsPermittedToLogon;
    }

    /**
      * Sets the value of the 'IsPermittedToLogon' field.
      * @param value The value of 'IsPermittedToLogon'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setIsPermittedToLogon(java.lang.String value) {
      validate(fields()[5], value);
      this.IsPermittedToLogon = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'IsPermittedToLogon' field has been set.
      * @return True if the 'IsPermittedToLogon' field has been set, false otherwise.
      */
    public boolean hasIsPermittedToLogon() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'IsPermittedToLogon' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearIsPermittedToLogon() {
      IsPermittedToLogon = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'IsSalesperson' field.
      * @return The value.
      */
    public java.lang.String getIsSalesperson() {
      return IsSalesperson;
    }

    /**
      * Sets the value of the 'IsSalesperson' field.
      * @param value The value of 'IsSalesperson'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setIsSalesperson(java.lang.String value) {
      validate(fields()[6], value);
      this.IsSalesperson = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'IsSalesperson' field has been set.
      * @return True if the 'IsSalesperson' field has been set, false otherwise.
      */
    public boolean hasIsSalesperson() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'IsSalesperson' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearIsSalesperson() {
      IsSalesperson = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'IsSystemUser' field.
      * @return The value.
      */
    public java.lang.String getIsSystemUser() {
      return IsSystemUser;
    }

    /**
      * Sets the value of the 'IsSystemUser' field.
      * @param value The value of 'IsSystemUser'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setIsSystemUser(java.lang.String value) {
      validate(fields()[7], value);
      this.IsSystemUser = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'IsSystemUser' field has been set.
      * @return True if the 'IsSystemUser' field has been set, false otherwise.
      */
    public boolean hasIsSystemUser() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'IsSystemUser' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearIsSystemUser() {
      IsSystemUser = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'LogonName' field.
      * @return The value.
      */
    public java.lang.String getLogonName() {
      return LogonName;
    }

    /**
      * Sets the value of the 'LogonName' field.
      * @param value The value of 'LogonName'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setLogonName(java.lang.String value) {
      validate(fields()[8], value);
      this.LogonName = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'LogonName' field has been set.
      * @return True if the 'LogonName' field has been set, false otherwise.
      */
    public boolean hasLogonName() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'LogonName' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearLogonName() {
      LogonName = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'OtherLanguages' field.
      * @return The value.
      */
    public java.lang.String getOtherLanguages() {
      return OtherLanguages;
    }

    /**
      * Sets the value of the 'OtherLanguages' field.
      * @param value The value of 'OtherLanguages'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setOtherLanguages(java.lang.String value) {
      validate(fields()[9], value);
      this.OtherLanguages = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'OtherLanguages' field has been set.
      * @return True if the 'OtherLanguages' field has been set, false otherwise.
      */
    public boolean hasOtherLanguages() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'OtherLanguages' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearOtherLanguages() {
      OtherLanguages = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'PreferredName' field.
      * @return The value.
      */
    public java.lang.String getPreferredName() {
      return PreferredName;
    }

    /**
      * Sets the value of the 'PreferredName' field.
      * @param value The value of 'PreferredName'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setPreferredName(java.lang.String value) {
      validate(fields()[10], value);
      this.PreferredName = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'PreferredName' field has been set.
      * @return True if the 'PreferredName' field has been set, false otherwise.
      */
    public boolean hasPreferredName() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'PreferredName' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearPreferredName() {
      PreferredName = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'SalesPersonCustomFields' field.
      * @return The value.
      */
    public java.lang.String getSalesPersonCustomFields() {
      return SalesPersonCustomFields;
    }

    /**
      * Sets the value of the 'SalesPersonCustomFields' field.
      * @param value The value of 'SalesPersonCustomFields'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setSalesPersonCustomFields(java.lang.String value) {
      validate(fields()[11], value);
      this.SalesPersonCustomFields = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'SalesPersonCustomFields' field has been set.
      * @return True if the 'SalesPersonCustomFields' field has been set, false otherwise.
      */
    public boolean hasSalesPersonCustomFields() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'SalesPersonCustomFields' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearSalesPersonCustomFields() {
      SalesPersonCustomFields = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'SalesPersonFaxNumber' field.
      * @return The value.
      */
    public java.lang.String getSalesPersonFaxNumber() {
      return SalesPersonFaxNumber;
    }

    /**
      * Sets the value of the 'SalesPersonFaxNumber' field.
      * @param value The value of 'SalesPersonFaxNumber'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setSalesPersonFaxNumber(java.lang.String value) {
      validate(fields()[12], value);
      this.SalesPersonFaxNumber = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'SalesPersonFaxNumber' field has been set.
      * @return True if the 'SalesPersonFaxNumber' field has been set, false otherwise.
      */
    public boolean hasSalesPersonFaxNumber() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'SalesPersonFaxNumber' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearSalesPersonFaxNumber() {
      SalesPersonFaxNumber = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'SalesPersonID' field.
      * @return The value.
      */
    public java.lang.Integer getSalesPersonID() {
      return SalesPersonID;
    }

    /**
      * Sets the value of the 'SalesPersonID' field.
      * @param value The value of 'SalesPersonID'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setSalesPersonID(int value) {
      validate(fields()[13], value);
      this.SalesPersonID = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'SalesPersonID' field has been set.
      * @return True if the 'SalesPersonID' field has been set, false otherwise.
      */
    public boolean hasSalesPersonID() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'SalesPersonID' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearSalesPersonID() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'SalesPersonPhoneNumber' field.
      * @return The value.
      */
    public java.lang.String getSalesPersonPhoneNumber() {
      return SalesPersonPhoneNumber;
    }

    /**
      * Sets the value of the 'SalesPersonPhoneNumber' field.
      * @param value The value of 'SalesPersonPhoneNumber'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setSalesPersonPhoneNumber(java.lang.String value) {
      validate(fields()[14], value);
      this.SalesPersonPhoneNumber = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'SalesPersonPhoneNumber' field has been set.
      * @return True if the 'SalesPersonPhoneNumber' field has been set, false otherwise.
      */
    public boolean hasSalesPersonPhoneNumber() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'SalesPersonPhoneNumber' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearSalesPersonPhoneNumber() {
      SalesPersonPhoneNumber = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'SalespersonValidFrom' field.
      * @return The value.
      */
    public java.lang.String getSalespersonValidFrom() {
      return SalespersonValidFrom;
    }

    /**
      * Sets the value of the 'SalespersonValidFrom' field.
      * @param value The value of 'SalespersonValidFrom'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setSalespersonValidFrom(java.lang.String value) {
      validate(fields()[15], value);
      this.SalespersonValidFrom = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'SalespersonValidFrom' field has been set.
      * @return True if the 'SalespersonValidFrom' field has been set, false otherwise.
      */
    public boolean hasSalespersonValidFrom() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'SalespersonValidFrom' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearSalespersonValidFrom() {
      SalespersonValidFrom = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'SalespersonValidTo' field.
      * @return The value.
      */
    public java.lang.String getSalespersonValidTo() {
      return SalespersonValidTo;
    }

    /**
      * Sets the value of the 'SalespersonValidTo' field.
      * @param value The value of 'SalespersonValidTo'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setSalespersonValidTo(java.lang.String value) {
      validate(fields()[16], value);
      this.SalespersonValidTo = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'SalespersonValidTo' field has been set.
      * @return True if the 'SalespersonValidTo' field has been set, false otherwise.
      */
    public boolean hasSalespersonValidTo() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'SalespersonValidTo' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearSalespersonValidTo() {
      SalespersonValidTo = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'SearchName' field.
      * @return The value.
      */
    public java.lang.String getSearchName() {
      return SearchName;
    }

    /**
      * Sets the value of the 'SearchName' field.
      * @param value The value of 'SearchName'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setSearchName(java.lang.String value) {
      validate(fields()[17], value);
      this.SearchName = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'SearchName' field has been set.
      * @return True if the 'SearchName' field has been set, false otherwise.
      */
    public boolean hasSearchName() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'SearchName' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearSearchName() {
      SearchName = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'UserPreferences' field.
      * @return The value.
      */
    public java.lang.String getUserPreferences() {
      return UserPreferences;
    }

    /**
      * Sets the value of the 'UserPreferences' field.
      * @param value The value of 'UserPreferences'.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder setUserPreferences(java.lang.String value) {
      validate(fields()[18], value);
      this.UserPreferences = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'UserPreferences' field has been set.
      * @return True if the 'UserPreferences' field has been set, false otherwise.
      */
    public boolean hasUserPreferences() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'UserPreferences' field.
      * @return This builder.
      */
    public net.syntio.beam.models.SalesPerson.Builder clearUserPreferences() {
      UserPreferences = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SalesPerson build() {
      try {
        SalesPerson record = new SalesPerson();
        record.EmailAddress = fieldSetFlags()[0] ? this.EmailAddress : (java.lang.String) defaultValue(fields()[0]);
        record.FullName = fieldSetFlags()[1] ? this.FullName : (java.lang.String) defaultValue(fields()[1]);
        record.HashedPassword = fieldSetFlags()[2] ? this.HashedPassword : (java.lang.String) defaultValue(fields()[2]);
        record.IsEmployee = fieldSetFlags()[3] ? this.IsEmployee : (java.lang.String) defaultValue(fields()[3]);
        record.IsExternalLogonProvider = fieldSetFlags()[4] ? this.IsExternalLogonProvider : (java.lang.String) defaultValue(fields()[4]);
        record.IsPermittedToLogon = fieldSetFlags()[5] ? this.IsPermittedToLogon : (java.lang.String) defaultValue(fields()[5]);
        record.IsSalesperson = fieldSetFlags()[6] ? this.IsSalesperson : (java.lang.String) defaultValue(fields()[6]);
        record.IsSystemUser = fieldSetFlags()[7] ? this.IsSystemUser : (java.lang.String) defaultValue(fields()[7]);
        record.LogonName = fieldSetFlags()[8] ? this.LogonName : (java.lang.String) defaultValue(fields()[8]);
        record.OtherLanguages = fieldSetFlags()[9] ? this.OtherLanguages : (java.lang.String) defaultValue(fields()[9]);
        record.PreferredName = fieldSetFlags()[10] ? this.PreferredName : (java.lang.String) defaultValue(fields()[10]);
        record.SalesPersonCustomFields = fieldSetFlags()[11] ? this.SalesPersonCustomFields : (java.lang.String) defaultValue(fields()[11]);
        record.SalesPersonFaxNumber = fieldSetFlags()[12] ? this.SalesPersonFaxNumber : (java.lang.String) defaultValue(fields()[12]);
        record.SalesPersonID = fieldSetFlags()[13] ? this.SalesPersonID : (java.lang.Integer) defaultValue(fields()[13]);
        record.SalesPersonPhoneNumber = fieldSetFlags()[14] ? this.SalesPersonPhoneNumber : (java.lang.String) defaultValue(fields()[14]);
        record.SalespersonValidFrom = fieldSetFlags()[15] ? this.SalespersonValidFrom : (java.lang.String) defaultValue(fields()[15]);
        record.SalespersonValidTo = fieldSetFlags()[16] ? this.SalespersonValidTo : (java.lang.String) defaultValue(fields()[16]);
        record.SearchName = fieldSetFlags()[17] ? this.SearchName : (java.lang.String) defaultValue(fields()[17]);
        record.UserPreferences = fieldSetFlags()[18] ? this.UserPreferences : (java.lang.String) defaultValue(fields()[18]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SalesPerson>
    WRITER$ = (org.apache.avro.io.DatumWriter<SalesPerson>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SalesPerson>
    READER$ = (org.apache.avro.io.DatumReader<SalesPerson>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
